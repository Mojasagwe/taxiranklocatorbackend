# Production profile for Heroku

# Let Heroku assign the port
server.port=${PORT:8080}

# Use Heroku's DATABASE_URL environment variable
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Optimization settings
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# JWT Configuration (should be set via environment variables in production)
app.jwtSecret=${JWT_SECRET:9a4f2c8d3b7a1e6f45c8a0b3f267d8b1d4e6f3c8a9d2b5f8e3a7c4d1b6e9f0}
app.jwtExpirationInMs=86400000

# Admin User Configuration (should be changed in production)
app.admin.email=${ADMIN_EMAIL:admin@taxirank.com}
app.admin.password=${ADMIN_PASSWORD:ChangeMeImmediately!23}

# Logging
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.info.env.enabled=true
management.info.build.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.endpoints.web.base-path=/actuator
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET 