name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for better code quality analysis
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.12.1
    
    - name: Run tests
      run: ./gradlew test --info
      env:
        SPRING_PROFILES_ACTIVE: test
    
    - name: Build with Gradle
      run: ./gradlew build -x test --info
      env:
        SPRING_PROFILES_ACTIVE: test
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/reports/tests/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: build/libs/*.jar
        if-no-files-found: error

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Check if SonarQube Token is set
      id: check-sonar
      run: |
        if [ "${{ secrets.SONAR_TOKEN }}" != "" ]; then
          echo "run_sonar=true" >> $GITHUB_OUTPUT
        else
          echo "run_sonar=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Run SonarQube Scan
      if: steps.check-sonar.outputs.run_sonar == 'true' && github.event_name != 'pull_request'
      run: ./gradlew sonarqube -x test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true
        
    - name: Run dependency vulnerability check
      run: ./gradlew dependencyCheckAnalyze
      continue-on-error: true
    
    - name: Upload vulnerability report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: vulnerability-report
        path: build/reports/dependency-check-report.html
        if-no-files-found: ignore

  deploy-to-heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: taxi-rank-backend
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: build/libs/
        
    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
        heroku --version
    
    - name: Verify Heroku credentials
      run: |
        if [ -z "${{ secrets.HEROKU_APP_NAME }}" ]; then
          echo "Error: HEROKU_APP_NAME is not set"
          exit 1
        fi
        echo "Using app: ${{ secrets.HEROKU_APP_NAME }}"
        echo "Using email: ${{ secrets.HEROKU_EMAIL }}"
        HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }} heroku auth:whoami
      
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        rollbackonhealthcheckfailed: false
        dontuseforce: false
        
    - name: Verify deployment
      run: |
        echo "Deployment completed, waiting for app to start..."
        sleep 30
        HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }} heroku ps --app ${{ secrets.HEROKU_APP_NAME }}
        HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }} heroku logs --app ${{ secrets.HEROKU_APP_NAME }} --num 20